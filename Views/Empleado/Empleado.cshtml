@model CRUD_1.Context.empleado

@{
    ViewBag.Title = "Empleado";

    ///List<SelectListItem> items = (List<SelectListItem>)ViewBag.items;

}

<style>
    .error {
        color: red;
    }
</style>

<h2>Empleado</h2>  

@using (Html.BeginForm("AddEmpleado", "Empleado", FormMethod.Post))
{
    <div class="container">
        <div class="form-group">
            @Html.HiddenFor(x => x.idEmp)
            <label>Nombre:</label>
            @Html.ValidationMessageFor(x => x.nombre, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.nombre, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <label>Apellido:</label>
            @Html.ValidationMessageFor(x => x.apellido, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.apellido, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <label>Telefono:</label>
            @Html.ValidationMessageFor(x => x.telefono, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.telefono, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <label>Direccion:</label>
            @Html.ValidationMessageFor(x => x.direccion, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.direccion, new { @class = "form-control", @rows = 10 })
        </div>

        <div class="form-group">
            <label>Compañia:</label>
            @Html.ValidationMessageFor(x => x.idcomp, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.idcomp, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <label>Compañia:</label>
            
           
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Guardar</button>
            <button type="reset" class="btn btn-danger">Cerrar</button>
        </div>



    </div>

}

